jobs:
  - name: get_latest_docker_image_list
    type: runSh
    steps:
      # This will automatically set the environment variables needed by rancher-compose
      - IN: pull_release_trigger
      - TASK:
        - script: |
            lsb_release -a
            curl -L -O https://raw.githubusercontent.com/QingCloudContainerPlatform/dockerhub_image_sync/master/repolist
            echo "get latest tags from following repos"
            cat repolist
            touch imagelist
            cat repolist | while read repo
            do \
            project=$(echo $repo|awk '{ print $1}')
            alternativens=$(echo $repo| awk '{ print $2}')
            echo "inspecting repo: $project"
            wget -q https://registry.hub.docker.com/v1/repositories/$project/tags -O -  | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}'|sort -r | head -n 3| while read version
            do \
              echo "$project" "$version" "$alternativens">> imagelist
              echo "got image $project, version tag $version"
            done
            done
            shipctl copy_file_to_state "imagelist"

  - name: push_docker_new_image
    type: runSh
    steps:
      - IN: qingcloud_hub_config
      - IN: get_latest_docker_image_list
      - TASK:
        - script: |
            imageliststate=$(shipctl get_resource_state get_latest_docker_image_list)
            cp $imageliststate/imagelist newimagelist
            cat newimagelist | while read item 
            do \
            repo=$(echo $item|awk '{ print $1}')
            tag=$(echo $item| awk '{ print $2}')
            alternativens=$(echo $item| awk '{ print $3}')
            namespace=${repo%/*}
            project=${repo#*/}
            finalrepo=${alternativens:-$namespace}/$project:$tag
            (docker pull $repo:$tag && docker tag $repo:$tag dockerhub.qingcloud.com/$finalrepo && shipctl retry docker push dockerhub.qingcloud.com/$finalrepo && echo "pushed $repo:$tag to dockerhub.qingcloud.com/$finalrepo")||true
            done
            mv newimagelist imagelist
            shipctl copy_file_to_state imagelist 
    on_success:
      - script: echo "Synced $VERSION to bucket"
      - NOTIFY: slack
    on_failure:
      - script: echo "Failed to get latest build $VERSION"
      - NOTIFY: slack
    on_cancel:
      - script: echo "Get latest build $VERSION canceled"
      - NOTIFY: slack
